{
  "info": {
    "name": "Mini Proyecto API Test - Javi",
    "_postman_id": "12345678-1234-1234-1234-1234567890ab",
    "description": "Proyecto simple para demostrar pruebas b√°sicas de API con Postman",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET All Posts",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://jsonplaceholder.typicode.com/posts",
          "protocol": "https",
          "host": ["jsonplaceholder","typicode","com"],
          "path": ["posts"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {", 
              "    pm.response.to.have.status(200);", 
              "});", 
              "pm.test(\"Response is an array\", function () {", 
              "    pm.expect(pm.response.json()).to.be.an('array');", 
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET Post by ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://jsonplaceholder.typicode.com/posts/1",
          "protocol": "https",
          "host": ["jsonplaceholder","typicode","com"],
          "path": ["posts","1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {", 
              "    pm.response.to.have.status(200);", 
              "});", 
              "pm.test(\"Response has userId and title\", function () {", 
              "    const jsonData = pm.response.json();", 
              "    pm.expect(jsonData).to.have.property('userId');", 
              "    pm.expect(jsonData).to.have.property('title');", 
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "POST Create Post",
      "request": {
        "method": "POST",
        "header": [{"key":"Content-Type","value":"application/json"}],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Mi primer post\",\n  \"body\": \"Este es un post de prueba\",\n  \"userId\": 1\n}"
        },
        "url": {
          "raw": "https://jsonplaceholder.typicode.com/posts",
          "protocol": "https",
          "host": ["jsonplaceholder","typicode","com"],
          "path": ["posts"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {", 
              "    pm.response.to.have.status(201);", 
              "});", 
              "pm.test(\"Response has id\", function () {", 
              "    const jsonData = pm.response.json();", 
              "    pm.expect(jsonData).to.have.property('id');", 
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "PUT Update Post",
      "request": {
        "method": "PUT",
        "header": [{"key":"Content-Type","value":"application/json"}],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"id\": 1,\n  \"title\": \"Post actualizado\",\n  \"body\": \"Este post fue actualizado\",\n  \"userId\": 1\n}"
        },
        "url": {
          "raw": "https://jsonplaceholder.typicode.com/posts/1",
          "protocol": "https",
          "host": ["jsonplaceholder","typicode","com"],
          "path": ["posts","1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {", 
              "    pm.response.to.have.status(200);", 
              "});", 
              "pm.test(\"Title is updated\", function () {", 
              "    const jsonData = pm.response.json();", 
              "    pm.expect(jsonData.title).to.eql(\"Post actualizado\");", 
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "DELETE Post",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "https://jsonplaceholder.typicode.com/posts/1",
          "protocol": "https",
          "host": ["jsonplaceholder","typicode","com"],
          "path": ["posts","1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 204\", function () {", 
              "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);", 
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
